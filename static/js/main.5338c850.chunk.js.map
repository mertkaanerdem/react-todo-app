{"version":3,"sources":["components/Form/Form.jsx","components/List/List.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","addTodos","todos","useState","todo","setTodo","className","placeholder","type","name","value","onChange","e","target","onClick","id","length","text","trim","console","log","List","doneItem","style","textDecoration","opacity","map","App","savedTodos","localStorage","getItem","JSON","parse","setTodos","useEffect","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iSAiDeA,MA7Cf,YAAoC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAAS,EACTC,mBAAS,IADA,mBAC1BC,EAD0B,KACpBC,EADoB,KAwBjC,OACE,sBAAKC,UAAU,gBAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,uBACEC,YAAY,mBACZC,KAAK,OACLC,KAAK,OACLC,MAAON,EACPO,SA7BQ,SAACC,GACfP,EAAQO,EAAEC,OAAOH,UA8Bb,wBAAQJ,UAAU,YAAYQ,QA3BlB,WAChB,GAAY,IAARV,EAAY,OAAO,EAEvBH,EAAS,GAAD,mBACHC,GADG,CAEN,CACEa,GAAIb,EAAMc,OAAS,EACnBC,KAAMb,EAAKc,WAGfb,EAAQ,KAiBJ,oBAIF,wBAAQC,UAAU,eAAeQ,QAlBpB,WACfb,EAAS,IACTkB,QAAQC,IAAI,cAgBV,2B,MCdSC,MA1Bf,YAA0B,IAAVnB,EAAS,EAATA,MACd,SAASoB,EAASV,GACsB,iBAAlCA,EAAEC,OAAOU,MAAMC,gBACjBZ,EAAEC,OAAOU,MAAMC,eAAiB,eAChCZ,EAAEC,OAAOU,MAAME,QAAU,KACzBN,QAAQC,IAAI,2BAEZR,EAAEC,OAAOU,MAAMC,eAAiB,GAChCZ,EAAEC,OAAOU,MAAME,QAAU,IACzBN,QAAQC,IAAI,+CAIhB,OACE,8BACE,6BACGlB,EAAMwB,KAAI,SAACtB,GAAD,OACT,oBAAIU,QAASQ,EAAb,SACE,4BAAIlB,EAAKa,QADiBb,EAAKW,YCW5BY,MAzBf,WAAgB,IAAD,EACaxB,oBAAS,WACjC,IAAMyB,EAAaC,aAAaC,QAAQ,SACxC,OAAIF,EACKG,KAAKC,MAAMJ,GAEX,MANE,mBACN1B,EADM,KACC+B,EADD,KAcb,OAJAC,qBAAU,WACRL,aAAaM,QAAQ,QAASJ,KAAKK,UAAUlC,MAC5C,CAACA,IAGF,sBAAKI,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAML,SAAUgC,EAAU/B,MAAOA,IACjC,qBAAKI,UAAU,YAAf,SACE,cAAC,EAAD,CAAMJ,MAAOA,UCZNmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5338c850.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nimport \"./Form.css\";\r\n\r\nfunction Form({ addTodos, todos }) {\r\n  const [todo, setTodo] = useState(\"\");\r\n\r\n  const getTodo = (e) => {\r\n    setTodo(e.target.value);\r\n  };\r\n\r\n  const addSubmit = () => {\r\n    if (todo == \"\") return false;\r\n\r\n    addTodos([\r\n      ...todos,\r\n      {\r\n        id: todos.length + 1,\r\n        text: todo.trim(),\r\n      },\r\n    ]);\r\n    setTodo(\"\");\r\n  };\r\n\r\n  const clearAll = () => {\r\n    addTodos([]);\r\n    console.log(\"temizleme\");\r\n  };\r\n  return (\r\n    <div className=\"listContainer\">\r\n      <div className=\"inputContainer\">\r\n        <input\r\n          placeholder=\"Write your plans\"\r\n          type=\"text\"\r\n          name=\"todo\"\r\n          value={todo}\r\n          onChange={getTodo}\r\n        />\r\n        <button className=\"addButton\" onClick={addSubmit}>\r\n          Add\r\n        </button>\r\n      </div>\r\n      <button className=\"cancelButton\" onClick={clearAll}>\r\n        Clear All\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import \"./List.css\";\r\n\r\nfunction List({ todos }) {\r\n  function doneItem(e) {\r\n    if (e.target.style.textDecoration !== \"line-through\") {\r\n      e.target.style.textDecoration = \"line-through\";\r\n      e.target.style.opacity = \".2\";\r\n      console.log(\"üstü çizildi\");\r\n    } else {\r\n      e.target.style.textDecoration = \"\";\r\n      e.target.style.opacity = \"1\";\r\n      console.log(\"üstü çizili değil artık\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ul>\r\n        {todos.map((todo) => (\r\n          <li onClick={doneItem} key={todo.id}>\r\n            <p>{todo.text}</p>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Form from \"./components/Form/Form\";\nimport List from \"./components/List/List\";\n\nfunction App() {\n  const [todos, setTodos] = useState(() => {\n    const savedTodos = localStorage.getItem(\"todos\");\n    if (savedTodos) {\n      return JSON.parse(savedTodos);\n    } else {\n      return [];\n    }\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  return (\n    <div className=\"App\">\n      <h2>To Do App</h2>\n      <Form addTodos={setTodos} todos={todos} />\n      <div className=\"container\">\n        <List todos={todos} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}